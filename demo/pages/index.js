import { useEffect, useState } from 'react';

export default function Home() {
    const [logs, setLogs] = useState([]);
    const [error, setError] = useState(null);

    useEffect(() => {
        // Function to fetch logs
        const fetchLogs = () => {
            fetch('/api/log')
                .then(res => {
                    if (!res.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return res.json();
                })
                .then(data => setLogs(data))
                .catch(error => {
                    console.error('Error fetching logs:', error);
                    setError('Failed to load logs // No logs available');
                });
        };

        fetchLogs();
        // Set up polling to fetch logs every 5 seconds
        const intervalId = setInterval(fetchLogs, 5000); 
        return () => clearInterval(intervalId);
    }, []);

    return (
        <div style={styles.container}>
            <h1 style={styles.heading}>Demo Logs</h1>
            {error ? (
                <p style={styles.error}>{error}</p>
            ) : (
                <div style={styles.logContainer}>
                    <ul style={styles.list}>
                        {logs.map((log, index) => (
                            <li key={index} style={styles.listItem}>
                                <code>
                                    <span style={styles.timestamp}>[{log.timestamp}]</span>{' '}
                                    <span style={styles.clientIp}>{log.clientIp}</span> -{' '}
                                    <span style={styles.keystroke}>Keystroke: {log.keystroke}</span>
                                </code>
                            </li>
                        ))}
                    </ul>
                </div>
            )}
        </div>
    );
}

const styles = {
    container: {
        fontFamily: 'Arial, sans-serif',
        margin: '0 auto',
        padding: '20px',
        maxWidth: '600px',
        textAlign: 'left',
        backgroundColor: '#f4f4f4',
        borderRadius: '8px',
        boxShadow: '0 2px 10px rgba(0,0,0,0.1)',
    },
    heading: {
        fontSize: '24px',
        color: '#333',
        textAlign: 'center',
        marginBottom: '20px',
    },
    error: {
        color: 'red',
        fontSize: '18px',
        textAlign: 'center',
    },
    logContainer: {
        backgroundColor: '#e0e0e0',
        padding: '15px',
        borderRadius: '8px',
    },
    list: {
        listStyleType: 'none',
        padding: 0,
    },
    listItem: {
        backgroundColor: '#fff',
        padding: '10px',
        marginBottom: '10px',
        borderRadius: '4px',
        boxShadow: '0 1px 5px rgba(0,0,0,0.1)',
        fontFamily: 'Courier, monospace',
    },
    timestamp: {
        fontWeight: 'bold',
        color: '#555',
    },
    clientIp: {
        fontWeight: 'bold',
        color: '#0070f3',
    },
    keystroke: {
        color: '#008000', 
        fontWeight: 'bold',
    },
};
